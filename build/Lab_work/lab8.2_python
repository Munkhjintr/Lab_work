class PrimeNumbers:
    def count_primes(self, n: int) -> int:
        if n < 2:
            return 0
            
        is_prime = [True] * n
        
        is_prime[0] = False
        is_prime[1] = False
        for i in range(2, int(n ** 0.5) + 1):
            if is_prime[i]:
                for j in range(i * i, n, i):
                    is_prime[j] = False
        
        return sum(is_prime)
    
    def print_prime_numbers(self, n: int) -> None:
        """Helper method to print prime numbers (for visualization)"""
        primes = [num for num in range(2, n) if self.is_prime(num)]
        print(f" {n} hvrtelh anhnii toonuud: {primes}")
    
    def is_prime(self, num: int) -> bool:
        """Helper method to check if a number is prime"""
        if num < 2:
            return False
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                return False
        return True

prime_counter = PrimeNumbers()
test_numbers = [18, 10, 1, 2, 100]

for n in test_numbers:
    result = prime_counter.count_primes(n)
    print(f"\nshlgalt n = {n}:")
    print(f" {n} hvrtelh anhnii toonuud: {result}")
    if n <= 20: 
        prime_counter.print_prime_numbers(n)
