import java.util.Arrays;

public class OptimalBST {
    public static int optimalBST(int[] keys, int[] freq, int n) {
        int[][] cost = new int[n][n];
        for (int i = 0; i < n; i++) {
            cost[i][i] = freq[i];
        }
        for (int length = 2; length <= n; length++) {
            for (int i = 0; i <= n - length; i++) {
                int j = i + length - 1;
                cost[i][j] = Integer.MAX_VALUE;

                for (int r = i; r <= j; r++) {
                    int c = 0;
                    if (r > i) {
                        c += cost[i][r - 1];
                    }
                    if (r < j) {
                        c += cost[r + 1][j];
                    }
                    c += Arrays.stream(freq, i, j + 1).sum();
                    cost[i][j] = Math.min(cost[i][j], c);
                }
            }
        }
        return cost[0][n - 1];
    }
    public static void main(String[] args) {
        int[] keys = {5, 6};
        int[] freq = {17, 25};
        int n = keys.length;

        System.out.println("hamgiin baga OBST vne bol: " + optimalBST(keys, freq, n));
    }
}
