def optimal_bst(keys, freq, n):
    cost = [[0 for _ in range(n)] for _ in range(n)]
    for i in range(n):
        cost[i][i] = freq[i]
    for length in range(2, n + 1):
        for i in range(n - length + 1):
            j = i + length - 1
            cost[i][j] = float('inf')

            for r in range(i, j + 1):
                c = 0
                if r > i:
                    c += cost[i][r - 1]
                if r < j:
                    c += cost[r + 1][j]
                c += sum(freq[i:j + 1])
                cost[i][j] = min(cost[i][j], c)
    return cost[0][n - 1]
if __name__ == "__main__":
    keys = [5, 6]
    freq = [17, 25]
    n = len(keys)
    print("hamgiin baga OBST vne ni:", optimal_bst(keys, freq, n))
