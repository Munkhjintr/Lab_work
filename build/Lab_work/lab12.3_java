import java.util.*;

class Solution {
    public List<Boolean> checkIfPrerequisite(int numCourses, int[][] prerequisites, int[][] queries) {
        boolean[][] isPredecessor = new boolean[numCourses][numCourses];
        for (int[] prereq : prerequisites) {
            isPredecessor[prereq[0]][prereq[1]] = true;
        }
        for (int k = 0; k < numCourses; k++) {
            for (int i = 0; i < numCourses; i++) {
                for (int j = 0; j < numCourses; j++) {
                    isPredecessor[i][j] |= (isPredecessor[i][k] && isPredecessor[k][j]);
                }
            }
        }
        List<Boolean> result = new ArrayList<>();
        for (int[] query : queries) {
            result.add(isPredecessor[query[0]][query[1]]);
        }
        return result;
    }
    public static void main(String[] args) {
        Solution solution = new Solution();
        int numCourses1 = 5;
        int[][] prerequisites1 = {{0,1},{1,2},{2,3},{3,4}};
        int[][] queries1 = {{0,4},{4,0},{1,3},{3,0}};
        List<Boolean> result1 = solution.checkIfPrerequisite(numCourses1, prerequisites1, queries1);
        System.out.println("test 1 iin vr dvn: " + result1);
        int numCourses2 = 3;
        int[][] prerequisites2 = {{1,2},{1,0},{2,0}};
        int[][] queries2 = {{1,0},{0,2}};
        List<Boolean> result2 = solution.checkIfPrerequisite(numCourses2, prerequisites2, queries2);
        System.out.println("test 2 iin vr dvn: " + result2);
    }
}
